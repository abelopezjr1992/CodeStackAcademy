// <auto-generated />
using LopezAdventureBackend.Services.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LopezAdventureBackend.Migrations
{
    [DbContext(typeof(dataContext))]
    partial class dataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LopezAdventureBackend.Models.Inventory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Inventory1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inventory2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inventory3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inventory4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inventory5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inventory6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("InventoryDataSQL");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Inventory1 = "Item01",
                            Inventory2 = "Item02",
                            Inventory3 = "Item03",
                            Inventory4 = "Item04",
                            Inventory5 = "Item05",
                            Inventory6 = "Item06",
                            Username = "Abe"
                        });
                });

            modelBuilder.Entity("LopezAdventureBackend.Models.loginPlayer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("loginPlayerSQL");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Password = "12345",
                            Username = "Abe"
                        });
                });

            modelBuilder.Entity("LopezAdventureBackend.Models.savedData", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("health")
                        .HasColumnType("int");

                    b.Property<int>("healthChange")
                        .HasColumnType("int");

                    b.Property<string>("item1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("item2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("item3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("item4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("option1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("option2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("option3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("optionS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("requiredItem1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("requiredItem2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("requiredItem3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("requiredItem4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("result1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("result2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("result3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("scene")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sceneid")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("savedDataSQL");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Username = "Abe",
                            health = 0,
                            healthChange = 0,
                            item1 = "Item01",
                            item2 = "Item02",
                            item3 = "Item03",
                            item4 = "Item04",
                            option1 = "Archer",
                            option2 = "Rogue",
                            option3 = "Warrior",
                            optionS = "NA",
                            requiredItem1 = "NA",
                            requiredItem2 = "NA",
                            requiredItem3 = "NA",
                            requiredItem4 = "NA",
                            result1 = "2",
                            result2 = "2",
                            result3 = "2",
                            resultS = "NA",
                            scene = "The beginning",
                            sceneid = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
